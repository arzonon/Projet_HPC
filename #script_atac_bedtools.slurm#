#!/bin/bash
#SBATCH --time=1:00:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --mem=24G
#SBATCH --cpus-per-task=8   # Nb of threads we want to run on ${SLURM_CPUS_ON_NODE}
#SBATCH -o log/slurmjob-%A-%a
#SBATCH --job-name=atac_macs
#SBATCH --partition=short
#SBATCH --array=0-6 

#Programme configuration
__author__='Alphonse thiaw'
__email__='alphonse_birane.thiaw@etu.uca.fr'
__credits__=["Alphonse Thiaw"]
__maintainer__='Alphonse Thiaw'
__status__='Development'
__version__=0.0.1

echo 'common and unique DNA accessibility sites'

# Handling errors
#set -e # a bash script to exit immediately when a command fails
set -o nounset # force variable initialisation
#set -x # debug mode on : print each command before executing it
#set -o pipefail # exit code of a pipeline to that of the rightmost command to exit with a non-zero status
#set -euxo pipefail
set -o errexit #ensure script will stop in case of ignored error

#Set up whatever package we need to run with
# module load 
module purge
module load gcc/4.8.4 bedtools/2.27.1

# set up the temporary directory
SCRATCHDIR=/storage/scratch/"$USER"/"$SLURM_JOB_ID"
mkdir -p -m 700 "$SCRATCHDIR"
cd "$SCRATCHDIR"

OUTPUT="$HOME"/results/atacseq/atac_bedtools
mkdir -p "$OUTPUT"

#Set up data directory
DATA_DIR="$HOME/results/atacseq/atac_macs"

echo "Collect BAM files to analysis" >&2
#tab=($(find $DATA_DIR -type f -name "*_trim_mapped_sorted_q2_nodup.bam"))


#echo "Start on $SLURMD_NODENAME: "`date` >&2

echo "Set up 2 arrays with forward and reverse fastq.gz sequence files..." >&2
tab_fwd=($(find $DATA_DIR -type f -name "50k_0h_*_trim_mapped_sorted_q2_nodup_summits.bed")) 
echo "tab_fwd = " >&2
printf '%s\n' "${tab_fwd[@]}" >&2

tab_rev=($(find $DATA_DIR -type f -name "50k_24h_*_trim_mapped_sorted_q2_nodup_summits.bed"))
echo "tab_rev = " >&2
printf '%s\n' "${tab_rev[@]}" >&2

#tab_fwd=($(ls "$DATA_DIR"/*/50k_24h_*_trim_mapped_sorted_q2_nodup_summits.bed))
#tab_rev=($(ls "$DATA_DIR"/*/50k_0h_*_trim_mapped_sorted_q2_nodup_summits.bed))

#echo "tab = " >&2
#printf '%s\n' "${tab[@]}" >&2

# Current filename
SHORTNAME=$(basename "${tab_fwd[$SLURM_ARRAY_TASK_ID]}" .bed )
echo "shortname = $SHORTNAME" >&2


#Run the program
echo "Start job: "`date` >&2
#


# Run the program
#multiBamSummary bins --bamfile ${tab[$SLURM_ARRAY_TASK_ID]}  -o "$SCRATCHDIR"results_deeptools.npz
#bedtools intersect -a ${tab_fwd[$SLURM_ARRAY_TASK_ID]} -b ${tab_rev[$SLURM_ARRAY_TASK_ID]}
#bedtools intersect -a "$tab_fwd" -b "$tab_rev" > "$SCRATCHDIR"/result_bedtools.bed
#bedtools intersect -a "$tab_fwd" -b "$tab_rev" > "$SCRATCHDIR"/"$SHORTNAME"_result_bedtools.bed

#Move results in one's directory

mv  "$SCRATCHDIR" "$OUTPUT"

# Cleaning in case something went wrong
rm -rf  "$SCRATCHDIR"

echo "Stop job: "`date` >&2
